<br><ul><li dir="ltr">Representations of Circuits<br><ul><li dir="ltr">Truth tables<br></li><li dir="ltr">Boolean Logic/Formulas<br></li><li dir="ltr">Gate diagrams<br></li></ul></li><li dir="ltr">Data storage<br><ul><li dir="ltr">Circuits<br></li><li dir="ltr">Gates<br></li><li dir="ltr">Transistors<br></li></ul></li><li dir="ltr">Data representation<br><ul><li dir="ltr">number systems<br><ul><li dir="ltr">hexadecimal, base 16 (<span style="font-family:monospace">0-F</span>)<br></li><li dir="ltr">binary, base 2 (<span style="font-family:monospace">0-1</span>)<br></li><li dir="ltr">decimal, base 10 (<span style="font-family:monospace">0-9</span>)<br></li><li dir="ltr">octal, base 8 (<span style="font-family:monospace">0-7</span>)<br></li></ul></li></ul></li><li dir="ltr">Adders<br><ul><li dir="ltr">Half adder<br><ul><li dir="ltr">a circuit that computes the sum of two bits and produces the correct carry bit<br></li><li dir="ltr">sum = <span style="font-family:monospace">A XOR B</span></li><li dir="ltr">carry = <span style="font-family:monospace">AB</span></li></ul></li><li dir="ltr">Full adder<br><ul><li dir="ltr">a circuit that takes the carry-in value into account<span style="font-family:monospace"></span></li><li dir="ltr"><span style="font-family:monospace">((A xor B) xor C) = sum</span></li><li dir="ltr"><span style="font-family:monospace">((A and B) or ((A xor B) and C) = carry-out</span></li></ul></li></ul></li></ul>
