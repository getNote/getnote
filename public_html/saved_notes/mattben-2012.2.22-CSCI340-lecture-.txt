mkfifo("myMap.txt", perns);<br><br><font class="Apple-style-span" color="#000000">1. Set up pipline for G1</font><div><font class="Apple-style-span" color="#000000">2. Fork / Exec for G1<br>&nbsp;--check for pipe if no pipe create it || mfd = open("myMap", o_WRONLY, ...)<br>&nbsp;--spit hard coded map(test) to named pipe || write mfd, "1\n&nbsp;&nbsp; \n",6)<br>&nbsp;--reads for ctor<br>&nbsp;--reads for getKey<br>3. setup pipeline for g2<br>4. fork / exec for g2<br>&nbsp;--read for ctor<br>&nbsp;--read for getKey<br>5. writes and reads to perform test<br><br>Now Driver is ready to run<br><br>To compare maps do use memcmp()<br></font></div><font class="Apple-style-span" color="#000000">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &lt;- &nbsp;Driver - &gt;</font><div><font class="Apple-style-span" color="#000000">fork/exec &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fork/exec</font></div><div><font class="Apple-style-span" color="#000000">G1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;G2<br>/***********************Map Class ******************************/<br>Map<br>ctor (M*, r, c)<br>postNotice (++var)&nbsp;&nbsp;&nbsp;&nbsp; &lt;- spit m*, r, c<br>drawMap (++var2)<br>getKey<br>&nbsp;1. spits map, r, c, car, var2<br></font></div>

